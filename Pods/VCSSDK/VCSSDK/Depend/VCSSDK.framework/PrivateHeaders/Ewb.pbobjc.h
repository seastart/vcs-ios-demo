// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ewb.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class EWBColor;
@class EWBPoint;
@class EWBShape;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum EWBCommand

/** 命令 */
typedef GPB_ENUM(EWBCommand) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EWBCommand_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EWBCommand_CmdUnknown = 0,

  /** 进入 */
  EWBCommand_CmdEnterRequest = 1,
  EWBCommand_CmdEnterResponse = 2,

  /** 心跳 */
  EWBCommand_CmdHeartbeatRequest = 3,
  EWBCommand_CmdHeartbeatResponse = 4,

  /** 离开 */
  EWBCommand_CmdExitRequest = 5,
  EWBCommand_CmdExitResponse = 6,

  /** 绘制 */
  EWBCommand_CmdDraw = 7,
  EWBCommand_CmdDrawEvent = 8,

  /** 撤销 */
  EWBCommand_CmdBack = 9,
  EWBCommand_CmdBackEvent = 10,

  /** 清除 */
  EWBCommand_CmdClean = 11,
  EWBCommand_CmdCleanEvent = 12,

  /** 重置画布 */
  EWBCommand_CmdReset = 13,
  EWBCommand_CmdResetEvent = 14,
};

GPBEnumDescriptor *EWBCommand_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EWBCommand_IsValidValue(int32_t value);

#pragma mark - Enum EWBPrivileges

/**
 * 权限
 * 二进制位功能：擦除别人|写
 **/
typedef GPB_ENUM(EWBPrivileges) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EWBPrivileges_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 默认，只读 */
  EWBPrivileges_PvDefault = 0,

  /** 可写 */
  EWBPrivileges_PvWrite = 1,

  /** 管理 */
  EWBPrivileges_PvAdmin = 3,
};

GPBEnumDescriptor *EWBPrivileges_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EWBPrivileges_IsValidValue(int32_t value);

#pragma mark - Enum EWBShapeType

/** 形状 */
typedef GPB_ENUM(EWBShapeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EWBShapeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 画笔 */
  EWBShapeType_ShapePen = 0,

  /** 线条 */
  EWBShapeType_ShapeLine = 1,

  /** 矩形 */
  EWBShapeType_ShapeRect = 2,

  /** 椭圆 */
  EWBShapeType_ShapeEllipse = 3,

  /** 箭头 */
  EWBShapeType_ShapeArrow = 4,

  /** 橡皮擦 */
  EWBShapeType_ShapeRubber = 100,

  /** 文本 */
  EWBShapeType_ShapeText = 200,
};

GPBEnumDescriptor *EWBShapeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EWBShapeType_IsValidValue(int32_t value);

#pragma mark - Enum EWBDrawType

typedef GPB_ENUM(EWBDrawType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  EWBDrawType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  EWBDrawType_DrawBegin = 0,
  EWBDrawType_Drawing = 1,
  EWBDrawType_DrawEnd = 2,
};

GPBEnumDescriptor *EWBDrawType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL EWBDrawType_IsValidValue(int32_t value);

#pragma mark - EWBEwbRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EWBEwbRoot : GPBRootObject
@end

#pragma mark - EWBPoint

typedef GPB_ENUM(EWBPoint_FieldNumber) {
  EWBPoint_FieldNumber_X = 1,
  EWBPoint_FieldNumber_Y = 2,
};

/**
 * 点
 **/
GPB_FINAL @interface EWBPoint : GPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@end

#pragma mark - EWBColor

typedef GPB_ENUM(EWBColor_FieldNumber) {
  EWBColor_FieldNumber_R = 1,
  EWBColor_FieldNumber_G = 2,
  EWBColor_FieldNumber_B = 3,
  EWBColor_FieldNumber_A = 4,
};

/**
 * 颜色
 **/
GPB_FINAL @interface EWBColor : GPBMessage

@property(nonatomic, readwrite) int32_t r;

@property(nonatomic, readwrite) int32_t g;

@property(nonatomic, readwrite) int32_t b;

@property(nonatomic, readwrite) int32_t a;

@end

#pragma mark - EWBShape

typedef GPB_ENUM(EWBShape_FieldNumber) {
  EWBShape_FieldNumber_Id_p = 1,
  EWBShape_FieldNumber_UserId = 2,
  EWBShape_FieldNumber_Type = 3,
  EWBShape_FieldNumber_PenWidth = 4,
  EWBShape_FieldNumber_PenColor = 5,
  EWBShape_FieldNumber_FiilColor = 6,
  EWBShape_FieldNumber_Alpha = 7,
  EWBShape_FieldNumber_PathArray = 8,
  EWBShape_FieldNumber_Text = 9,
};

/**
 * 形状
 **/
GPB_FINAL @interface EWBShape : GPBMessage

/** 形状唯一编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 形状所属用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 类型 */
@property(nonatomic, readwrite) EWBShapeType type;

/** 画笔宽度 */
@property(nonatomic, readwrite) int32_t penWidth;

/** 画笔颜色 */
@property(nonatomic, readwrite, strong, null_resettable) EWBColor *penColor;
/** Test to see if @c penColor has been set. */
@property(nonatomic, readwrite) BOOL hasPenColor;

/** 填充颜色 */
@property(nonatomic, readwrite, strong, null_resettable) EWBColor *fiilColor;
/** Test to see if @c fiilColor has been set. */
@property(nonatomic, readwrite) BOOL hasFiilColor;

/** 透明度 */
@property(nonatomic, readwrite) int32_t alpha;

/** 路径 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EWBPoint*> *pathArray;
/** The number of items in @c pathArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger pathArray_Count;

/** 文本 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@end

/**
 * Fetches the raw value of a @c EWBShape's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EWBShape_Type_RawValue(EWBShape *message);
/**
 * Sets the raw value of an @c EWBShape's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEWBShape_Type_RawValue(EWBShape *message, int32_t value);

#pragma mark - EWBEnterRequest

typedef GPB_ENUM(EWBEnterRequest_FieldNumber) {
  EWBEnterRequest_FieldNumber_RoomId = 1,
  EWBEnterRequest_FieldNumber_UserId = 2,
  EWBEnterRequest_FieldNumber_Privileges = 3,
  EWBEnterRequest_FieldNumber_WhRatio = 4,
  EWBEnterRequest_FieldNumber_PicURL = 5,
};

/**
 * 进入
 **/
GPB_FINAL @interface EWBEnterRequest : GPBMessage

/** 房间ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

/** 用户ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 权限 */
@property(nonatomic, readwrite) int32_t privileges;

/** 画布宽高比例 */
@property(nonatomic, readwrite) float whRatio;

/** 画布背景图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

@end

#pragma mark - EWBEnterResponse

typedef GPB_ENUM(EWBEnterResponse_FieldNumber) {
  EWBEnterResponse_FieldNumber_Result = 1,
  EWBEnterResponse_FieldNumber_Message = 2,
  EWBEnterResponse_FieldNumber_WhRatio = 3,
  EWBEnterResponse_FieldNumber_PicURL = 4,
  EWBEnterResponse_FieldNumber_Privileges = 5,
  EWBEnterResponse_FieldNumber_ShapesArray = 6,
};

GPB_FINAL @interface EWBEnterResponse : GPBMessage

@property(nonatomic, readwrite) BOOL result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 画布宽高比例 */
@property(nonatomic, readwrite) float whRatio;

/** 画布背景图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

/** 权限 */
@property(nonatomic, readwrite) int32_t privileges;

/** 所有图形 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EWBShape*> *shapesArray;
/** The number of items in @c shapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapesArray_Count;

@end

#pragma mark - EWBHeartbeatRequest

typedef GPB_ENUM(EWBHeartbeatRequest_FieldNumber) {
  EWBHeartbeatRequest_FieldNumber_RoomId = 1,
  EWBHeartbeatRequest_FieldNumber_UserId = 2,
};

/**
 * 心跳
 **/
GPB_FINAL @interface EWBHeartbeatRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - EWBHeartbeatResponse

typedef GPB_ENUM(EWBHeartbeatResponse_FieldNumber) {
  EWBHeartbeatResponse_FieldNumber_Result = 1,
  EWBHeartbeatResponse_FieldNumber_Message = 2,
};

GPB_FINAL @interface EWBHeartbeatResponse : GPBMessage

@property(nonatomic, readwrite) BOOL result;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - EWBExitRequest

typedef GPB_ENUM(EWBExitRequest_FieldNumber) {
  EWBExitRequest_FieldNumber_RoomId = 1,
  EWBExitRequest_FieldNumber_UserId = 2,
};

/**
 * 离开
 **/
GPB_FINAL @interface EWBExitRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - EWBExitResponse

GPB_FINAL @interface EWBExitResponse : GPBMessage

@end

#pragma mark - EWBDraw

typedef GPB_ENUM(EWBDraw_FieldNumber) {
  EWBDraw_FieldNumber_RoomId = 1,
  EWBDraw_FieldNumber_Shape = 2,
  EWBDraw_FieldNumber_Type = 3,
};

/**
 * 绘制操作
 **/
GPB_FINAL @interface EWBDraw : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, strong, null_resettable) EWBShape *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@property(nonatomic, readwrite) EWBDrawType type;

@end

/**
 * Fetches the raw value of a @c EWBDraw's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EWBDraw_Type_RawValue(EWBDraw *message);
/**
 * Sets the raw value of an @c EWBDraw's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEWBDraw_Type_RawValue(EWBDraw *message, int32_t value);

#pragma mark - EWBDrawEvent

typedef GPB_ENUM(EWBDrawEvent_FieldNumber) {
  EWBDrawEvent_FieldNumber_RoomId = 1,
  EWBDrawEvent_FieldNumber_Shape = 2,
  EWBDrawEvent_FieldNumber_Type = 3,
};

GPB_FINAL @interface EWBDrawEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, strong, null_resettable) EWBShape *shape;
/** Test to see if @c shape has been set. */
@property(nonatomic, readwrite) BOOL hasShape;

@property(nonatomic, readwrite) EWBDrawType type;

@end

/**
 * Fetches the raw value of a @c EWBDrawEvent's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t EWBDrawEvent_Type_RawValue(EWBDrawEvent *message);
/**
 * Sets the raw value of an @c EWBDrawEvent's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetEWBDrawEvent_Type_RawValue(EWBDrawEvent *message, int32_t value);

#pragma mark - EWBBack

typedef GPB_ENUM(EWBBack_FieldNumber) {
  EWBBack_FieldNumber_RoomId = 1,
  EWBBack_FieldNumber_UserId = 2,
  EWBBack_FieldNumber_ShapeId = 3,
};

/**
 * 撤回
 **/
GPB_FINAL @interface EWBBack : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shapeId;

@end

#pragma mark - EWBBackEvent

typedef GPB_ENUM(EWBBackEvent_FieldNumber) {
  EWBBackEvent_FieldNumber_RoomId = 1,
  EWBBackEvent_FieldNumber_UserId = 2,
  EWBBackEvent_FieldNumber_ShapeId = 3,
};

GPB_FINAL @interface EWBBackEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *shapeId;

@end

#pragma mark - EWBClean

typedef GPB_ENUM(EWBClean_FieldNumber) {
  EWBClean_FieldNumber_RoomId = 1,
  EWBClean_FieldNumber_UserId = 2,
};

/**
 * 清除
 **/
GPB_FINAL @interface EWBClean : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - EWBCleanEvent

typedef GPB_ENUM(EWBCleanEvent_FieldNumber) {
  EWBCleanEvent_FieldNumber_RoomId = 1,
  EWBCleanEvent_FieldNumber_UserId = 2,
};

GPB_FINAL @interface EWBCleanEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - EWBReset

typedef GPB_ENUM(EWBReset_FieldNumber) {
  EWBReset_FieldNumber_RoomId = 1,
  EWBReset_FieldNumber_UserId = 2,
  EWBReset_FieldNumber_WhRatio = 3,
  EWBReset_FieldNumber_PicURL = 4,
};

/**
 * 重置画布
 **/
GPB_FINAL @interface EWBReset : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 画布宽高比例 */
@property(nonatomic, readwrite) float whRatio;

/** 画布背景图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

@end

#pragma mark - EWBResetEvent

typedef GPB_ENUM(EWBResetEvent_FieldNumber) {
  EWBResetEvent_FieldNumber_RoomId = 1,
  EWBResetEvent_FieldNumber_UserId = 2,
  EWBResetEvent_FieldNumber_WhRatio = 3,
  EWBResetEvent_FieldNumber_PicURL = 4,
};

GPB_FINAL @interface EWBResetEvent : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *roomId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 画布宽高比例 */
@property(nonatomic, readwrite) float whRatio;

/** 画布背景图片 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *picURL;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
